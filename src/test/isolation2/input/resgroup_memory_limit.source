-- start_ignore
DROP ROLE IF EXISTS role1_memory_test;
DROP RESOURCE GROUP rg1_memory_test;
-- end_ignore

CREATE OR REPLACE FUNCTION resGroupPalloc(float) RETURNS int AS '@abs_builddir@/../regress/regress@DLSUFFIX@', 'resGroupPalloc' LANGUAGE C READS SQL DATA;

CREATE OR REPLACE FUNCTION hold_memory_by_percent(int, float) RETURNS int AS $$
    SELECT * FROM resGroupPalloc($2)
$$ LANGUAGE sql;

CREATE RESOURCE GROUP rg1_memory_test WITH (concurrency=2, cpu_rate_limit=0.1, memory_limit=0.5, memory_shared_quota=0.0);
CREATE ROLE role1_memory_test RESOURCE GROUP rg1_memory_test;

-- FIXME: grant needed?

-- 1) on QD only with memory_shared_quota == 0

1: SET ROLE TO role1_memory_test;
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1q:

1: SET ROLE TO role1_memory_test;
1: BEGIN;
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1q:

1: SET ROLE TO role1_memory_test;
1: SELECT hold_memory_by_percent(1,0.49);
1: SELECT hold_memory_by_percent(1,0.49);
1q:

1: SET ROLE TO role1_memory_test;
1: BEGIN;
1: SELECT hold_memory_by_percent(1,0.49);
1: SELECT hold_memory_by_percent(1,0.49);
1q:

1: SET ROLE TO role1_memory_test;
1: SELECT hold_memory_by_percent(1,0.51);
1q:

-- 2) on QEs with memory_shared_quota == 0

1: SET ROLE TO role1_memory_test;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1q:

1: SET ROLE TO role1_memory_test;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.49)=0;
1q:

1: SET ROLE TO role1_memory_test;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.51)=0;
1q:

-- 3) on QD with memory_shared_quota > 0

DROP ROLE role1_memory_test;
DROP RESOURCE GROUP rg1_memory_test;

CREATE RESOURCE GROUP rg1_memory_test WITH (concurrency=2, cpu_rate_limit=0.1, memory_limit=0.1, memory_shared_quota=0.4);
CREATE ROLE role1_memory_test RESOURCE GROUP rg1_memory_test;

1: SET ROLE TO role1_memory_test;
1: SELECT hold_memory_by_percent(1,0.69);
1q:

1: SET ROLE TO role1_memory_test;
1: SELECT hold_memory_by_percent(1,0.71);
1q:

1: SET ROLE TO role1_memory_test;
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1: SELECT hold_memory_by_percent(1,0.1);
1q:

-- 4) on QEs with memory_shared_quota > 0

1: SET ROLE TO role1_memory_test;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
1q:

-- 5) QD: concurrent transactions in same group with memory_shared_quota > 0

DROP ROLE role1_memory_test;
DROP RESOURCE GROUP rg1_memory_test;
CREATE RESOURCE GROUP rg1_memory_test WITH (concurrency=2, cpu_rate_limit=0.1, memory_limit=0.1, memory_shared_quota=0.4);
CREATE ROLE role1_memory_test RESOURCE GROUP rg1_memory_test;

1: SET ROLE TO role1_memory_test;
1: BEGIN;
1: SELECT hold_memory_by_percent(1,0.6);
2: SET ROLE TO role1_memory_test;
2: BEGIN;
2: SELECT hold_memory_by_percent(1,0.39);
2q:
2: SET ROLE TO role1_memory_test;
2: BEGIN;
2: SELECT hold_memory_by_percent(1,0.1);
2: SELECT hold_memory_by_percent(1,0.1);
2: SELECT hold_memory_by_percent(1,0.1);
2: SELECT hold_memory_by_percent(1,0.1);
2q:
1q:

-- 6) QE: concurrent transactions in same group with memory_shared_quota > 0

DROP ROLE role1_memory_test;
DROP RESOURCE GROUP rg1_memory_test;
CREATE RESOURCE GROUP rg1_memory_test WITH (concurrency=2, cpu_rate_limit=0.1, memory_limit=0.1, memory_shared_quota=0.4);
CREATE ROLE role1_memory_test RESOURCE GROUP rg1_memory_test;

1: SET ROLE TO role1_memory_test;
1: BEGIN;
1: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.6)=0;
2: SET ROLE TO role1_memory_test;
2: BEGIN;
2: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.39)=0;
2q:
2: SET ROLE TO role1_memory_test;
2: BEGIN;
2: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
2: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
2: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
2: SELECT count(*) FROM gp_dist_random('gp_id') t1 WHERE hold_memory_by_percent(t1.dbid,0.1)=0;
2q:
1q:


-- cleanup
ALTER ROLE role1_memory_test RESOURCE GROUP none;

DROP ROLE role1_memory_test;
DROP RESOURCE GROUP rg1_memory_test;
